stages:
  - test-dags
  - deploy

valid_dags:
  stage: test-dags
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME == "develop"'
  variables:
    JOB_NAME: "Test All Airflow Dags on Develop Branch"
  script:
    - echo "DevelopBranch - Starting to Run Testing DAGS Airflow"
    - cd /opt/itc_workflow
    - sudo git fetch --all
    - sudo git switch ${CI_COMMIT_REF_NAME}
    - sudo git reset --hard origin/${CI_COMMIT_REF_NAME}
    - make test_dags
  after_script:
    # Notify Telegram based on job success or failure
    - |
      if [ $CI_JOB_STATUS == 'success' ]; then
        MESSAGE="✅ Job '${CI_JOB_NAME}' in '${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}:${CI_COMMIT_MESSAGE}' succeeded!"
        echo "$MESSAGE"
      else
        MESSAGE="❌ Job '${CI_JOB_NAME}' in '${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}:${CI_COMMIT_MESSAGE}' failed!"
        echo "$MESSAGE"
      fi
      python3 cicd/send_msg.py --message "$MESSAGE"

deploy:
  stage: deploy
  only:
    - main
  variables:
    JOB_NAME: "Deploy Airflow"
  needs:
    - job: valid_dags
  script:
    - echo "Start to Deploy Airflow"
    - cd /opt/itc_workflow
    - sudo git fetch --all
    - sudo git switch main
    - sudo git reset --hard origin/main
    - sudo bash cicd/pull_code.sh
  when: on_success
  after_script:
    # Notify Telegram based on job success or failure
    - |
      if [ $CI_JOB_STATUS == 'success' ]; then
        MESSAGE="✅ Job '${CI_JOB_NAME}' in '${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}:${CI_COMMIT_MESSAGE}' succeeded!"
      else
        MESSAGE="❌ Job '${CI_JOB_NAME}' in '${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}:${CI_COMMIT_MESSAGE}' failed!"
      fi
      python3 cicd/send_msg.py --message "$MESSAGE"
